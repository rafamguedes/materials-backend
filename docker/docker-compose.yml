services:
  postgres:
    image: postgres:13
    container_name: database
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: materials_db
    ports:
      - "5432:5432"
    networks:
      - backend-network
    volumes:
        - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - backend-network
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning --requirepass redispass
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redispass", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/materials_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_TIMEOUT: 60000ms
      SPRING_CACHE_REDIS_TIME-TO-LIVE: 3600000
      SPRING_CACHE_TYPE: redis

      SPRING_REDIS_LETTUCE_POOL_MAX-ACTIVE: 8
      SPRING_REDIS_LETTUCE_POOL_MAX-IDLE: 8
      SPRING_REDIS_LETTUCE_POOL_MIN-IDLE: 0
      SPRING_REDIS_LETTUCE_SHUTDOWN-TIMEOUT: 100ms

      SPRING_PROFILES_ACTIVE: dev
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - backend-network

  nginx:
    image: nginx:latest
    container_name: nginx_load_balancer
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: